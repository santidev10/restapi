# Generated by Django 3.1.6 on 2021-03-18 21:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # These CreateModel operations are not required as we are renaming these models from
        # the performiq app. See performiq/migrations/0017_auto_20210318_2120.py
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='Account',
                    fields=[
                        ('id', models.BigAutoField(primary_key=True, serialize=False)),
                        ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                    ],
                ),
            ],
            database_operations=[],
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='OAuthAccount',
                    fields=[
                        ('created_at', models.DateTimeField(auto_now_add=True)),
                        ('updated_at', models.DateTimeField(auto_now=True)),
                        ('oauth_type', models.IntegerField(choices=[(0, 'Google Ads Oauth'), (1, 'Google DV360 Oauth')],
                                                           db_index=True)),
                        ('id', models.BigAutoField(primary_key=True, serialize=False)),
                        ('name', models.CharField(db_index=True, max_length=255, null=True)),
                        ('email', models.EmailField(db_index=True, max_length=255, null=True)),
                        ('token', models.CharField(max_length=255, null=True)),
                        ('refresh_token', models.CharField(max_length=150, null=True)),
                        ('revoked_access', models.BooleanField(db_index=True, default=False)),
                        ('is_enabled', models.BooleanField(db_index=True, default=True)),
                        ('synced', models.BooleanField(db_index=True, default=False)),
                        ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test',
                                                   to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'abstract': False,
                    },
                ),
            ],
            database_operations=[]
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='DV360Partner',
                    fields=[
                        ('created_at', models.DateTimeField(auto_now_add=True)),
                        ('updated_at', models.DateTimeField(auto_now=True)),
                        ('id', models.BigIntegerField(db_index=True, primary_key=True, serialize=False)),
                        ('name', models.CharField(max_length=250)),
                        ('display_name', models.CharField(default='', max_length=250)),
                        ('update_time', models.DateTimeField(default=None, null=True)),
                        ('entity_status', models.SmallIntegerField(
                            choices=[(0, 'Unspecified'), (1, 'Active'), (2, 'Archived'), (3, 'Draft'), (4, 'Paused'),
                                     (5, 'Scheduled for Deletion')], db_index=True, default=None, null=True)),
                        ('oauth_accounts',
                         models.ManyToManyField(related_name='dv360_partners', to='oauth.OAuthAccount')),
                    ],
                    options={
                        'abstract': False,
                    },
                ),
            ],
            database_operations=[]
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='DV360Advertiser',
                    fields=[
                        ('created_at', models.DateTimeField(auto_now_add=True)),
                        ('updated_at', models.DateTimeField(auto_now=True)),
                        ('id', models.BigIntegerField(db_index=True, primary_key=True, serialize=False)),
                        ('name', models.CharField(max_length=250)),
                        ('display_name', models.CharField(default='', max_length=250)),
                        ('update_time', models.DateTimeField(default=None, null=True)),
                        ('entity_status', models.SmallIntegerField(
                            choices=[(0, 'Unspecified'), (1, 'Active'), (2, 'Archived'), (3, 'Draft'), (4, 'Paused'),
                                     (5, 'Scheduled for Deletion')], db_index=True, default=None, null=True)),
                        ('oauth_accounts',
                         models.ManyToManyField(related_name='dv360_advertisers', to='oauth.OAuthAccount')),
                        ('partner',
                         models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advertisers',
                                           to='oauth.dv360partner')),
                    ],
                    options={
                        'abstract': False,
                    },
                ),
            ],
            database_operations=[]
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='Campaign',
                    fields=[
                        ('created_at', models.DateTimeField(auto_now_add=True)),
                        ('updated_at', models.DateTimeField(auto_now=True)),
                        ('oauth_type', models.IntegerField(choices=[(0, 'Google Ads Oauth'), (1, 'Google DV360 Oauth')],
                                                           db_index=True)),
                        ('display_name', models.CharField(default='', max_length=250)),
                        ('update_time', models.DateTimeField(default=None, null=True)),
                        ('entity_status', models.SmallIntegerField(
                            choices=[(0, 'Unspecified'), (1, 'Active'), (2, 'Archived'), (3, 'Draft'), (4, 'Paused'),
                                     (5, 'Scheduled for Deletion')], db_index=True, default=None, null=True)),
                        ('id', models.BigAutoField(primary_key=True, serialize=False)),
                        ('name', models.CharField(db_index=True, max_length=255, null=True)),
                        ('impressions', models.IntegerField(db_index=True, default=0)),
                        ('video_views', models.IntegerField(db_index=True, default=0)),
                        ('cost', models.FloatField(db_index=True, default=0)),
                        ('cpm', models.FloatField(db_index=True, default=0)),
                        ('cpv', models.FloatField(db_index=True, default=0)),
                        ('ctr', models.FloatField(db_index=True, default=0)),
                        ('active_view_viewability', models.FloatField(db_index=True, default=0)),
                        ('video_quartile_100_rate', models.FloatField(db_index=True, default=0)),
                        ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                                      related_name='campaigns', to='oauth.account')),
                        ('advertiser',
                         models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           related_name='campaigns', to='oauth.dv360advertiser')),
                    ],
                    options={
                        'abstract': False,
                    },
                ),
            ],
            database_operations=[]
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AddField(
                    model_name='account',
                    name='oauth_accounts',
                    field=models.ManyToManyField(db_index=True, related_name='gads_accounts', to='oauth.OAuthAccount'),
                ),
            ],
            database_operations=[]
        ),
    ]
