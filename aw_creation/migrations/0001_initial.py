# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2017-05-15 11:42
from __future__ import unicode_literals

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import aw_creation.models


def get_uid(length=12):
    return str(uuid.uuid4()).replace('-', '')[:length]


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('aw_reporting', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountCreation',
            fields=[
                ('name', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator("^[^#']*$", 'Not allowed characters')])),
                ('id', models.CharField(default=get_uid, editable=False, max_length=12, primary_key=True, serialize=False)),
                ('aw_manager_id', models.CharField(blank=True, max_length=15, null=True)),
                ('is_paused', models.BooleanField(default=False)),
                ('is_ended', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_changed', models.BooleanField(default=True)),
                ('version', models.CharField(default="", max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('VIDEO', 'Video'), ('DISPLAY', 'Display')], default='VIDEO', max_length=15)),
                ('goal_type', models.CharField(choices=[('GOAL_VIDEO_VIEWS', 'Views'), ('GOAL_IMPRESSIONS', 'Impressions')], default='GOAL_VIDEO_VIEWS', max_length=20)),
                ('delivery_method', models.CharField(choices=[('STANDARD', 'Standard'), ('ACCELERATED', 'Accelerated')], default='STANDARD', max_length=15)),
                ('video_ad_format', models.CharField(choices=[('TRUE_VIEW_IN_STREAM', 'In-stream'), ('TRUE_VIEW_IN_DISPLAY', 'Discovery'), ('BUMPER', 'Bumper')], default='TRUE_VIEW_IN_STREAM', max_length=20)),
                ('bidding_type', models.CharField(choices=[('MANUAL_CPV', 'Manual CPV')], default='MANUAL_CPV', max_length=20)),
                ('video_networks_raw', models.CharField(default='["YOUTUBE_SEARCH", "YOUTUBE_VIDEO", "VIDEO_PARTNER_ON_THE_DISPLAY_NETWORK"]', max_length=100)),
                ('account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_creation', to='aw_reporting.Account')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aw_account_creations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdGroupCreation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator("^[^#']*$", 'Not allowed characters')])),
                ('max_rate', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('video_url', models.URLField(validators=[django.core.validators.RegexValidator('^(?:https?:/{2})?(?:w{3}\\.)?youtu(?:be)?\\.(?:com|be)(?:/watch\\?v=|/video/)([^\\s&]+)$', 'Wrong video url')])),
                ('display_url', models.CharField(blank=True, max_length=200, null=True)),
                ('final_url', models.URLField(blank=True, null=True)),
                ('ct_overlay_text', models.CharField(blank=True, max_length=250, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('genders_raw', models.CharField(default='["GENDER_FEMALE", "GENDER_MALE", "GENDER_UNDETERMINED"]', max_length=100)),
                ('parents_raw', models.CharField(default='["PARENT_PARENT", "PARENT_NOT_A_PARENT", "PARENT_UNDETERMINED"]', max_length=100)),
                ('age_ranges_raw', models.CharField(default='["AGE_RANGE_18_24", "AGE_RANGE_25_34", "AGE_RANGE_35_44", "AGE_RANGE_45_54", "AGE_RANGE_55_64", "AGE_RANGE_65_UP", "AGE_RANGE_UNDETERMINED"]', max_length=200)),
                ('ad_group', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ad_group_creation', to='aw_reporting.AdGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdScheduleRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveSmallIntegerField()),
                ('from_hour', models.PositiveSmallIntegerField()),
                ('from_minute', models.PositiveSmallIntegerField(default=0)),
                ('to_hour', models.PositiveSmallIntegerField()),
                ('to_minute', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CampaignCreation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator("^[^#']*$", 'Not allowed characters')])),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('goal_units', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_rate', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_paused', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('devices_raw', models.CharField(default='["DESKTOP_DEVICE", "MOBILE_DEVICE", "TABLET_DEVICE"]', max_length=100)),
                ('account_creation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_creations', to='aw_creation.AccountCreation')),
                ('campaign', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_creation', to='aw_reporting.Campaign')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FrequencyCap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('IMPRESSION', 'Impression'), ('VIDEO_VIEW', 'View')], default='IMPRESSION', max_length=10)),
                ('level', models.CharField(choices=[('CAMPAIGN', 'Campaign'), ('AD_GROUP', 'AdGroup'), ('AD_GROUP_CREATIVE', 'Creative')], default='CAMPAIGN', max_length=20)),
                ('limit', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('time_unit', models.CharField(choices=[('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month')], default='DAY', max_length=5)),
                ('campaign_creation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequency_capping', to='aw_creation.CampaignCreation')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='LocationRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('radius', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(800)])),
                ('radius_units', models.CharField(choices=[('MILES', 'Miles'), ('KILOMETERS', 'Kilometers')], default='MILES', max_length=10)),
                ('bid_modifier', models.DecimalField(decimal_places=2, default=Decimal('1'), max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('-1')), django.core.validators.MaxValueValidator(Decimal('4.0'))])),
                ('campaign_creation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_rules', to='aw_creation.CampaignCreation')),
                ('geo_target', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aw_reporting.GeoTarget')),
            ],
        ),
        migrations.CreateModel(
            name='TargetingItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria', models.CharField(max_length=150)),
                ('type', models.CharField(choices=[('channel', 'channel'), ('video', 'video'), ('topic', 'topic'), ('interest', 'interest'), ('keyword', 'keyword')], max_length=20)),
                ('is_negative', models.BooleanField(default=False)),
                ('ad_group_creation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targeting_items', to='aw_creation.AdGroupCreation')),
            ],
            options={
                'ordering': ['ad_group_creation', 'type', 'is_negative', 'criteria'],
            },
        ),
        migrations.AddField(
            model_name='campaigncreation',
            name='languages',
            field=models.ManyToManyField(default=aw_creation.models.default_languages, related_name='campaigns', to='aw_creation.Language'),
        ),
        migrations.AddField(
            model_name='adschedulerule',
            name='campaign_creation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ad_schedule_rules', to='aw_creation.CampaignCreation'),
        ),
        migrations.AddField(
            model_name='adgroupcreation',
            name='campaign_creation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ad_group_creations', to='aw_creation.CampaignCreation'),
        ),
        migrations.AlterUniqueTogether(
            name='targetingitem',
            unique_together=set([('ad_group_creation', 'type', 'criteria')]),
        ),
        migrations.AlterUniqueTogether(
            name='frequencycap',
            unique_together=set([('campaign_creation', 'event_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='adschedulerule',
            unique_together=set([('campaign_creation', 'day', 'from_hour', 'from_minute', 'to_hour', 'to_minute')]),
        ),
    ]
