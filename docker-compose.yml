version: "2.4"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    image: viewiq-restapi
    environment:
      SINGLE_DATABASE_API_HOST: sdb
      ALLOWED_HOSTS: api
      RABBITMQ_HOST: rabbitmq
      DB_HOST: pg
      DB_USER: postgres
      DB_PASSWORD: password
      ELASTIC_SEARCH_URLS: es
      ELASTIC_SEARCH_USE_SSL: 0
      DMP_RESULT_BACKEND: elasticsearch://es:9200/celery/task_result
    depends_on:
      rabbitmq:
        condition: service_healthy
      pg:
        condition: service_healthy
      es:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --silent localhost:5000 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  celery_worker:
    image: viewiq-restapi
    command: ["celery", "-A", "saas", "worker", "-l", "info", "-Q", "celery,reports,delivery_statistic,email_reports"]
    depends_on:
      - rabbitmq
      - pg
      - redis
    environment:
      RABBITMQ_HOST: rabbitmq
      DB_HOST: pg
      DB_USER: postgres
      DB_PASSWORD: password
      ELASTIC_SEARCH_URLS: es

  celery_beat:
    image: viewiq-restapi
    command: ["celery", "-A", "saas", "beat", "-l", "info"]
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      ELASTIC_SEARCH_URLS: es
      DO_SALESFORCE_UPDATE: 0

  pg:
    image: postgres:9.6
    environment:
      POSTGRES_DB: saas
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  es:
    image: elasticsearch:6.4.2
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30

  rabbitmq:
    image: viewiq/rabbitmq
    build:
      context: ./.docker/rabbitmq/

    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:5.0.4
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3
