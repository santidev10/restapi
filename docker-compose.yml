version: "3"

services:
  api:
    build: .
    image: viewiq-restapi
    environment:
      SINGLE_DATABASE_API_HOST: sdb
      ALLOWED_HOSTS: api
      RABBITMQ_HOST: rabbitmq
      DB_HOST: pg
      DB_USER: postgres
      DB_PASSWORD: password
    depends_on:
      - pg
      - rabbitmq
      - redis
      - es
    healthcheck:
      test: ["CMD-SHELL", "/wait-for-it.sh -t 1 localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
  celery_worker:
    image: viewiq-restapi
    command: ["celery", "-A", "saas", "worker", "-l", "info"]
    depends_on:
      - rabbitmq
      - pg
      - redis
    environment:
      RABBITMQ_HOST: rabbitmq
      DB_HOST: pg
      DB_USER: postgres
      DB_PASSWORD: password
  celery_beat:
    image: viewiq-restapi
    command: ["celery", "-A", "saas", "beat", "-l", "info"]
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq

  web:
    image: viewiq-ui
    build:
      context: ../ui
      dockerfile: Dockerfile.dist
    volumes:
      - ./.docker/conf.nginx:/etc/nginx/nginx.conf
    depends_on:
      - api
  sdb:
    image: viewiq-sdb
    build:
      context: ../singledb/.
    depends_on:
      - cassandra
      - es

  pg:
    image: postgres:9.6
    environment:
      POSTGRES_DB: saas
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  es:
    image: elasticsearch:6.4.2
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
  cassandra:
    image: cassandra
    expose:
      - "9042"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
      retries: 5
  rabbitmq:
    image: rabbitmq:3.7.8-management
    ports:
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
  redis:
    image: redis:5.0.4
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3