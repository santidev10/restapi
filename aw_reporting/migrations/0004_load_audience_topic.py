# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2017-03-13 14:13
from __future__ import unicode_literals

import csv

from django.db import migrations


def load_data(apps, schema_editor):
    # topics
    topic_model = apps.get_model('aw_reporting.Topic')
    bulk = []
    with open('aw_reporting/fixtures/verticals.csv') as f:
        reader = csv.reader(f)
        next(reader, None)  # title

        for name, uid, parent_id in reader:
            bulk.append(topic_model(
                id=uid, name=name,
                parent_id=parent_id if parent_id != "0" else None,
            ))
    topic_model.objects.bulk_create(bulk)

    # interests
    audience_model = apps.get_model('aw_reporting.Audience')
    bulk = []
    with open('aw_reporting/fixtures/affinity_categories.csv') as f:
        reader = csv.reader(f)
        next(reader, None)  # title
        for uid, name in reader:
            bulk.append(audience_model(
                id=uid, name=name, type="affinity",
            ))

    with open('aw_reporting/fixtures/in-market_categories.csv') as f:
        reader = csv.reader(f)
        next(reader, None)  # title
        for uid, name in reader:
            bulk.append(audience_model(
                id=uid, name=name, type="in-market",
            ))
    audience_model.objects.bulk_create(bulk)

    # update parents
    offset = 0
    limit = 100
    while True:
        audiences = audience_model.objects.filter(
            parent__isnull=True).order_by('id')[offset:offset + limit]
        if not audiences:
            break
        for audience in audiences:
            if audience.name.count('/') > 1:
                parent_name = "/".join(
                    audience.name.split('/')[:audience.name.count('/')]
                )
                parent = audience_model.objects.get(name=parent_name)
                audience.parent = parent
                audience.save()
                offset -= 1

        offset += limit


class Migration(migrations.Migration):

    dependencies = [
        ('aw_reporting', '0003_audience_topic'),
    ]

    operations = [
        migrations.RunPython(load_data),
    ]
