# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2017-05-29 12:18
from __future__ import unicode_literals

import django.db.models.deletion
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):
    dependencies = [
        ("aw_reporting", "0005_auto_20170526_1149"),
    ]

    operations = [
        migrations.CreateModel(
            name="Ad",
            fields=[
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("id", models.CharField(max_length=15, primary_key=True, serialize=False)),
                ("headline", models.CharField(max_length=150, null=True)),
                ("creative_name", models.CharField(max_length=150, null=True)),
                ("display_url", models.CharField(max_length=150, null=True)),
                ("status", models.CharField(max_length=10, null=True)),
                ("ad_group", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="ads",
                                               to="aw_reporting.AdGroup")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AdGroupStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("device_id", models.SmallIntegerField(db_index=True, default=0)),
                ("ad_network", models.CharField(db_index=True, max_length=20)),
                ("average_position", models.DecimalField(decimal_places=2, max_digits=6)),
                ("ad_group", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="statistics",
                                               to="aw_reporting.AdGroup")),
            ],
            options={
                "ordering": ["ad_group", "date", "device_id", "ad_network"],
            },
        ),
        migrations.CreateModel(
            name="AdStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("average_position", models.DecimalField(decimal_places=2, max_digits=6)),
                ("ad", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="statistics",
                                         to="aw_reporting.Ad")),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="AgeRangeStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("age_range_id", models.SmallIntegerField(db_index=True, default=0)),
                ("ad_group",
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="age_statistics",
                                   to="aw_reporting.AdGroup")),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="AudienceStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("ad_group", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="audiences",
                                               to="aw_reporting.AdGroup")),
                ("audience",
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="aw_reporting.Audience")),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="CampaignHourlyStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField()),
                ("hour", models.PositiveSmallIntegerField()),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("campaign",
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="hourly_statistics",
                                   to="aw_reporting.Campaign")),
            ],
            options={
                "ordering": ["campaign", "date", "hour"],
            },
        ),
        migrations.CreateModel(
            name="CampaignStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("device_id", models.SmallIntegerField(db_index=True, default=0)),
                ("campaign", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="statistics",
                                               to="aw_reporting.Campaign")),
            ],
            options={
                "ordering": ["campaign", "date", "device_id"],
            },
        ),
        migrations.CreateModel(
            name="CityStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("ad_group",
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="cities_stats",
                                   to="aw_reporting.AdGroup")),
                ("city", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="aw_stats",
                                           to="aw_reporting.GeoTarget")),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="GenderStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("gender_id", models.SmallIntegerField(db_index=True, default=0)),
                ("ad_group",
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="gender_statistics",
                                   to="aw_reporting.AdGroup")),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="KeywordStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("keyword", models.CharField(max_length=150)),
                ("ad_group", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="keywords",
                                               to="aw_reporting.AdGroup")),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="RemarkList",
            fields=[
                ("id", models.CharField(max_length=15, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name="RemarkStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("ad_group",
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="remark_statistic",
                                   to="aw_reporting.AdGroup")),
                ("remark",
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="aw_reporting.RemarkList")),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="TopicStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("ad_group", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="topics",
                                               to="aw_reporting.AdGroup")),
                ("topic", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="aw_reporting.Topic")),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="VideoCreative",
            fields=[
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("id", models.CharField(max_length=255, primary_key=True, serialize=False)),
                ("duration", models.IntegerField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="VideoCreativeStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("ad_group",
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="videos_stats",
                                   to="aw_reporting.AdGroup")),
                ("creative", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="statistics",
                                               to="aw_reporting.VideoCreative")),
            ],
            options={
                "ordering": ["ad_group", "creative", "date"],
            },
        ),
        migrations.CreateModel(
            name="YTChannelStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("device_id", models.SmallIntegerField(db_index=True, default=0)),
                ("yt_id", models.CharField(db_index=True, max_length=30)),
                ("ad_group",
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="channel_statistics",
                                   to="aw_reporting.AdGroup")),
            ],
            options={
                "ordering": ["ad_group", "yt_id", "device_id", "date"],
            },
        ),
        migrations.CreateModel(
            name="YTVideoStatistic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("impressions", models.IntegerField(default=0)),
                ("video_views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("cost", models.FloatField(default=0)),
                ("conversions", models.FloatField(default=0)),
                ("all_conversions", models.FloatField(default=0)),
                ("view_through", models.IntegerField(default=0)),
                ("video_views_25_quartile", models.FloatField(default=0)),
                ("video_views_50_quartile", models.FloatField(default=0)),
                ("video_views_75_quartile", models.FloatField(default=0)),
                ("video_views_100_quartile", models.FloatField(default=0)),
                ("date", models.DateField(db_index=True)),
                ("device_id", models.SmallIntegerField(db_index=True, default=0)),
                ("yt_id", models.CharField(db_index=True, max_length=30)),
                ("ad_group", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                               related_name="managed_video_statistics", to="aw_reporting.AdGroup")),
            ],
            options={
                "ordering": ["ad_group", "yt_id", "device_id", "date"],
            },
        ),
        migrations.RemoveField(
            model_name="account",
            name="manager",
        ),
        migrations.AddField(
            model_name="account",
            name="managers",
            field=models.ManyToManyField(related_name="_account_managers_+", to="aw_reporting.Account"),
        ),
        migrations.AlterUniqueTogether(
            name="ytvideostatistic",
            unique_together=set([("ad_group", "yt_id", "device_id", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="ytchannelstatistic",
            unique_together=set([("ad_group", "yt_id", "device_id", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="videocreativestatistic",
            unique_together=set([("ad_group", "creative", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="topicstatistic",
            unique_together=set([("topic", "ad_group", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="remarkstatistic",
            unique_together=set([("remark", "ad_group", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="keywordstatistic",
            unique_together=set([("keyword", "ad_group", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="genderstatistic",
            unique_together=set([("gender_id", "ad_group", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="citystatistic",
            unique_together=set([("city", "ad_group", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="campaignstatistic",
            unique_together=set([("campaign", "date", "device_id")]),
        ),
        migrations.AlterUniqueTogether(
            name="campaignhourlystatistic",
            unique_together=set([("campaign", "date", "hour")]),
        ),
        migrations.AlterUniqueTogether(
            name="audiencestatistic",
            unique_together=set([("audience", "ad_group", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="agerangestatistic",
            unique_together=set([("age_range_id", "ad_group", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="adstatistic",
            unique_together=set([("ad", "date")]),
        ),
        migrations.AlterUniqueTogether(
            name="adgroupstatistic",
            unique_together=set([("ad_group", "date", "device_id", "ad_network")]),
        ),
    ]
