# Generated by Django 3.1.6 on 2021-03-08 18:44

from django.db import migrations

BUILD__CTL_CREATE = "build.ctl_create"
BUILD__CTL_DELETE = "build.ctl_delete"
BUILD__CTL_CREATE_CHANNEL_LIST = "build.ctl_create_channel_list"
BUILD__CTL_DELETE_CHANNEL_LIST = "build.ctl_delete_channel_list"
BUILD__CTL_CREATE_VIDEO_LIST = "build.ctl_create_video_list"
BUILD__CTL_DELETE_VIDEO_LIST = "build.ctl_delete_video_list"

new_perms = [
    BUILD__CTL_CREATE_CHANNEL_LIST,
    BUILD__CTL_DELETE_CHANNEL_LIST,
    BUILD__CTL_CREATE_VIDEO_LIST,
    BUILD__CTL_DELETE_VIDEO_LIST,
]

old_perm_by_new_perm = {
    BUILD__CTL_CREATE_CHANNEL_LIST: BUILD__CTL_CREATE,
    BUILD__CTL_DELETE_CHANNEL_LIST: BUILD__CTL_DELETE,
    BUILD__CTL_CREATE_VIDEO_LIST: BUILD__CTL_CREATE,
    BUILD__CTL_DELETE_VIDEO_LIST: BUILD__CTL_DELETE,
}


def revert_to_old_ctl_perms(apps, schema_editor):
    """
    re-add the old ctl create/delete perms, for users that had them. also removes the new perms
    :param apps:
    :param schema_editor:
    :return:
    """
    UserProfile = apps.get_model("userprofile", "UserProfile")
    for user in UserProfile.objects.all():
        user_perms = user.perms
        new_user_perms = {}
        for new_perm in new_perms:
            value = user_perms.pop(new_perm, None)
            if value is None:
                continue

            old_perm = old_perm_by_new_perm.get(new_perm)
            new_user_perms[old_perm] = value

        if new_user_perms:
            user_perms.update(new_user_perms)
            user.perms = user_perms
            user.save(update_fields=["perms"])


class Migration(migrations.Migration):

    dependencies = [
        ('userprofile', '0055_auto_20210306_0057'),
    ]

    operations = [
        migrations.RunPython(revert_to_old_ctl_perms),
    ]
